"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fetchGraphiQlListFail = exports.fetchGraphiQlListSuccess = exports.fetchGraphiQlList = exports.updateGraphiQlFailure = exports.updateGraphiQlSuccess = exports.updateGraphiQl = exports.fetchGraphiQlFail = exports.fetchGraphiQlSuccess = exports.fetchGraphiQlById = exports.createOrUpdateGraphiQlFail = exports.createOrUpdateGraphiQlSuccess = exports.createOrUpdateGraphiQl = void 0;

var _constants = _interopRequireDefault(require("./constants"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var createOrUpdateGraphiQl = function createOrUpdateGraphiQl(data) {
  return {
    data: data,
    type: _constants.default.CREATE_UPDATE_QUERY_REQUEST
  };
};

exports.createOrUpdateGraphiQl = createOrUpdateGraphiQl;

var createOrUpdateGraphiQlSuccess = function createOrUpdateGraphiQlSuccess(response) {
  return {
    response: response,
    type: _constants.default.CREATE_UPDATE_QUERY_SUCCESS
  };
};

exports.createOrUpdateGraphiQlSuccess = createOrUpdateGraphiQlSuccess;

var createOrUpdateGraphiQlFail = function createOrUpdateGraphiQlFail(error) {
  return {
    error: error,
    type: _constants.default.CREATE_UPDATE_QUERY_FAIL
  };
};

exports.createOrUpdateGraphiQlFail = createOrUpdateGraphiQlFail;

var fetchGraphiQlById = function fetchGraphiQlById(id) {
  return {
    id: id,
    type: _constants.default.FETCH_QUERY_REQUEST
  };
};

exports.fetchGraphiQlById = fetchGraphiQlById;

var fetchGraphiQlSuccess = function fetchGraphiQlSuccess(response) {
  return {
    response: response,
    type: _constants.default.FETCH_QUERY_SUCCESS
  };
};

exports.fetchGraphiQlSuccess = fetchGraphiQlSuccess;

var fetchGraphiQlFail = function fetchGraphiQlFail(error) {
  return {
    error: error,
    type: _constants.default.FETCH_QUERY_FAIL
  };
};

exports.fetchGraphiQlFail = fetchGraphiQlFail;

var updateGraphiQl = function updateGraphiQl(data) {
  return {
    data: data,
    type: _constants.default.UPDATE_QUERY_REQUEST
  };
};

exports.updateGraphiQl = updateGraphiQl;

var updateGraphiQlSuccess = function updateGraphiQlSuccess(response) {
  return {
    response: response,
    type: _constants.default.UPDATE_QUERY_SUCCESS
  };
};

exports.updateGraphiQlSuccess = updateGraphiQlSuccess;

var updateGraphiQlFailure = function updateGraphiQlFailure(error) {
  return {
    error: error,
    type: _constants.default.UPDATE_QUERY_FAIL
  };
};

exports.updateGraphiQlFailure = updateGraphiQlFailure;

var fetchGraphiQlList = function fetchGraphiQlList(data) {
  return {
    data: data,
    type: _constants.default.FETCH_QUERY_LIST_REQUEST
  };
};

exports.fetchGraphiQlList = fetchGraphiQlList;

var fetchGraphiQlListSuccess = function fetchGraphiQlListSuccess(response) {
  return {
    response: response,
    type: _constants.default.FETCH_QUERY_LIST_SUCCESS
  };
};

exports.fetchGraphiQlListSuccess = fetchGraphiQlListSuccess;

var fetchGraphiQlListFail = function fetchGraphiQlListFail(error) {
  return {
    error: error,
    type: _constants.default.FETCH_QUERY_LIST_FAIL
  };
};

exports.fetchGraphiQlListFail = fetchGraphiQlListFail;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hY3Rpb25zL2dyYXBoaVFsL2luZGV4LnRzIl0sIm5hbWVzIjpbImNyZWF0ZU9yVXBkYXRlR3JhcGhpUWwiLCJkYXRhIiwidHlwZSIsIkdyYXBoaVFsQ29uc3RhbnRzIiwiQ1JFQVRFX1VQREFURV9RVUVSWV9SRVFVRVNUIiwiY3JlYXRlT3JVcGRhdGVHcmFwaGlRbFN1Y2Nlc3MiLCJyZXNwb25zZSIsIkNSRUFURV9VUERBVEVfUVVFUllfU1VDQ0VTUyIsImNyZWF0ZU9yVXBkYXRlR3JhcGhpUWxGYWlsIiwiZXJyb3IiLCJDUkVBVEVfVVBEQVRFX1FVRVJZX0ZBSUwiLCJmZXRjaEdyYXBoaVFsQnlJZCIsImlkIiwiRkVUQ0hfUVVFUllfUkVRVUVTVCIsImZldGNoR3JhcGhpUWxTdWNjZXNzIiwiRkVUQ0hfUVVFUllfU1VDQ0VTUyIsImZldGNoR3JhcGhpUWxGYWlsIiwiRkVUQ0hfUVVFUllfRkFJTCIsInVwZGF0ZUdyYXBoaVFsIiwiVVBEQVRFX1FVRVJZX1JFUVVFU1QiLCJ1cGRhdGVHcmFwaGlRbFN1Y2Nlc3MiLCJVUERBVEVfUVVFUllfU1VDQ0VTUyIsInVwZGF0ZUdyYXBoaVFsRmFpbHVyZSIsIlVQREFURV9RVUVSWV9GQUlMIiwiZmV0Y2hHcmFwaGlRbExpc3QiLCJGRVRDSF9RVUVSWV9MSVNUX1JFUVVFU1QiLCJmZXRjaEdyYXBoaVFsTGlzdFN1Y2Nlc3MiLCJGRVRDSF9RVUVSWV9MSVNUX1NVQ0NFU1MiLCJmZXRjaEdyYXBoaVFsTGlzdEZhaWwiLCJGRVRDSF9RVUVSWV9MSVNUX0ZBSUwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQTs7OztBQUVPLElBQU1BLHNCQUFzQixHQUFHLFNBQXpCQSxzQkFBeUIsQ0FBQ0MsSUFBRDtBQUFBLFNBQWdCO0FBQ3BEQSxJQUFBQSxJQUFJLEVBQUpBLElBRG9EO0FBRXBEQyxJQUFBQSxJQUFJLEVBQUVDLG1CQUFrQkM7QUFGNEIsR0FBaEI7QUFBQSxDQUEvQjs7OztBQUtBLElBQU1DLDZCQUE2QixHQUFHLFNBQWhDQSw2QkFBZ0MsQ0FBQ0MsUUFBRDtBQUFBLFNBQW9CO0FBQy9EQSxJQUFBQSxRQUFRLEVBQVJBLFFBRCtEO0FBRS9ESixJQUFBQSxJQUFJLEVBQUVDLG1CQUFrQkk7QUFGdUMsR0FBcEI7QUFBQSxDQUF0Qzs7OztBQU1BLElBQU1DLDBCQUEwQixHQUFHLFNBQTdCQSwwQkFBNkIsQ0FBQ0MsS0FBRDtBQUFBLFNBQWlCO0FBQ3pEQSxJQUFBQSxLQUFLLEVBQUxBLEtBRHlEO0FBRXpEUCxJQUFBQSxJQUFJLEVBQUVDLG1CQUFrQk87QUFGaUMsR0FBakI7QUFBQSxDQUFuQzs7OztBQUtBLElBQU1DLGlCQUFpQixHQUFHLFNBQXBCQSxpQkFBb0IsQ0FBQ0MsRUFBRDtBQUFBLFNBQWM7QUFDN0NBLElBQUFBLEVBQUUsRUFBRkEsRUFENkM7QUFFN0NWLElBQUFBLElBQUksRUFBRUMsbUJBQWtCVTtBQUZxQixHQUFkO0FBQUEsQ0FBMUI7Ozs7QUFLQSxJQUFNQyxvQkFBb0IsR0FBRyxTQUF2QkEsb0JBQXVCLENBQUNSLFFBQUQ7QUFBQSxTQUFvQjtBQUN0REEsSUFBQUEsUUFBUSxFQUFSQSxRQURzRDtBQUV0REosSUFBQUEsSUFBSSxFQUFFQyxtQkFBa0JZO0FBRjhCLEdBQXBCO0FBQUEsQ0FBN0I7Ozs7QUFNQSxJQUFNQyxpQkFBaUIsR0FBRyxTQUFwQkEsaUJBQW9CLENBQUNQLEtBQUQ7QUFBQSxTQUFpQjtBQUNoREEsSUFBQUEsS0FBSyxFQUFMQSxLQURnRDtBQUVoRFAsSUFBQUEsSUFBSSxFQUFFQyxtQkFBa0JjO0FBRndCLEdBQWpCO0FBQUEsQ0FBMUI7Ozs7QUFPQSxJQUFNQyxjQUFjLEdBQUcsU0FBakJBLGNBQWlCLENBQUNqQixJQUFEO0FBQUEsU0FBZ0I7QUFDNUNBLElBQUFBLElBQUksRUFBSkEsSUFENEM7QUFFNUNDLElBQUFBLElBQUksRUFBRUMsbUJBQWtCZ0I7QUFGb0IsR0FBaEI7QUFBQSxDQUF2Qjs7OztBQUtBLElBQU1DLHFCQUFxQixHQUFHLFNBQXhCQSxxQkFBd0IsQ0FBQ2QsUUFBRDtBQUFBLFNBQW9CO0FBQ3ZEQSxJQUFBQSxRQUFRLEVBQVJBLFFBRHVEO0FBRXZESixJQUFBQSxJQUFJLEVBQUVDLG1CQUFrQmtCO0FBRitCLEdBQXBCO0FBQUEsQ0FBOUI7Ozs7QUFNQSxJQUFNQyxxQkFBcUIsR0FBRyxTQUF4QkEscUJBQXdCLENBQUNiLEtBQUQ7QUFBQSxTQUFpQjtBQUNwREEsSUFBQUEsS0FBSyxFQUFMQSxLQURvRDtBQUVwRFAsSUFBQUEsSUFBSSxFQUFFQyxtQkFBa0JvQjtBQUY0QixHQUFqQjtBQUFBLENBQTlCOzs7O0FBS0EsSUFBTUMsaUJBQWlCLEdBQUcsU0FBcEJBLGlCQUFvQixDQUFDdkIsSUFBRDtBQUFBLFNBQWdCO0FBQy9DQSxJQUFBQSxJQUFJLEVBQUpBLElBRCtDO0FBRS9DQyxJQUFBQSxJQUFJLEVBQUVDLG1CQUFrQnNCO0FBRnVCLEdBQWhCO0FBQUEsQ0FBMUI7Ozs7QUFLQSxJQUFNQyx3QkFBd0IsR0FBRyxTQUEzQkEsd0JBQTJCLENBQUNwQixRQUFEO0FBQUEsU0FBb0I7QUFDMURBLElBQUFBLFFBQVEsRUFBUkEsUUFEMEQ7QUFFMURKLElBQUFBLElBQUksRUFBRUMsbUJBQWtCd0I7QUFGa0MsR0FBcEI7QUFBQSxDQUFqQzs7OztBQU1BLElBQU1DLHFCQUFxQixHQUFHLFNBQXhCQSxxQkFBd0IsQ0FBQ25CLEtBQUQ7QUFBQSxTQUFpQjtBQUNwREEsSUFBQUEsS0FBSyxFQUFMQSxLQURvRDtBQUVwRFAsSUFBQUEsSUFBSSxFQUFFQyxtQkFBa0IwQjtBQUY0QixHQUFqQjtBQUFBLENBQTlCIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgR3JhcGhpUWxDb25zdGFudHMgZnJvbSAnLi9jb25zdGFudHMnO1xuXG5leHBvcnQgY29uc3QgY3JlYXRlT3JVcGRhdGVHcmFwaGlRbCA9IChkYXRhOiBhbnkpID0+ICh7XG4gIGRhdGEsXG4gIHR5cGU6IEdyYXBoaVFsQ29uc3RhbnRzLkNSRUFURV9VUERBVEVfUVVFUllfUkVRVUVTVFxufSk7XG5cbmV4cG9ydCBjb25zdCBjcmVhdGVPclVwZGF0ZUdyYXBoaVFsU3VjY2VzcyA9IChyZXNwb25zZTogYW55KSA9PiAoe1xuICByZXNwb25zZSxcbiAgdHlwZTogR3JhcGhpUWxDb25zdGFudHMuQ1JFQVRFX1VQREFURV9RVUVSWV9TVUNDRVNTXG59KTtcblxuXG5leHBvcnQgY29uc3QgY3JlYXRlT3JVcGRhdGVHcmFwaGlRbEZhaWwgPSAoZXJyb3I6IGFueSkgPT4gKHtcbiAgZXJyb3IsXG4gIHR5cGU6IEdyYXBoaVFsQ29uc3RhbnRzLkNSRUFURV9VUERBVEVfUVVFUllfRkFJTFxufSk7XG5cbmV4cG9ydCBjb25zdCBmZXRjaEdyYXBoaVFsQnlJZCA9IChpZDogYW55KSA9PiAoe1xuICBpZCxcbiAgdHlwZTogR3JhcGhpUWxDb25zdGFudHMuRkVUQ0hfUVVFUllfUkVRVUVTVFxufSk7XG5cbmV4cG9ydCBjb25zdCBmZXRjaEdyYXBoaVFsU3VjY2VzcyA9IChyZXNwb25zZTogYW55KSA9PiAoe1xuICByZXNwb25zZSxcbiAgdHlwZTogR3JhcGhpUWxDb25zdGFudHMuRkVUQ0hfUVVFUllfU1VDQ0VTU1xufSk7XG5cblxuZXhwb3J0IGNvbnN0IGZldGNoR3JhcGhpUWxGYWlsID0gKGVycm9yOiBhbnkpID0+ICh7XG4gIGVycm9yLFxuICB0eXBlOiBHcmFwaGlRbENvbnN0YW50cy5GRVRDSF9RVUVSWV9GQUlMXG59KTtcblxuXG5cbmV4cG9ydCBjb25zdCB1cGRhdGVHcmFwaGlRbCA9IChkYXRhOiBhbnkpID0+ICh7XG4gIGRhdGEsXG4gIHR5cGU6IEdyYXBoaVFsQ29uc3RhbnRzLlVQREFURV9RVUVSWV9SRVFVRVNUXG59KTtcblxuZXhwb3J0IGNvbnN0IHVwZGF0ZUdyYXBoaVFsU3VjY2VzcyA9IChyZXNwb25zZTogYW55KSA9PiAoe1xuICByZXNwb25zZSxcbiAgdHlwZTogR3JhcGhpUWxDb25zdGFudHMuVVBEQVRFX1FVRVJZX1NVQ0NFU1Ncbn0pO1xuXG5cbmV4cG9ydCBjb25zdCB1cGRhdGVHcmFwaGlRbEZhaWx1cmUgPSAoZXJyb3I6IGFueSkgPT4gKHtcbiAgZXJyb3IsXG4gIHR5cGU6IEdyYXBoaVFsQ29uc3RhbnRzLlVQREFURV9RVUVSWV9GQUlMXG59KTtcblxuZXhwb3J0IGNvbnN0IGZldGNoR3JhcGhpUWxMaXN0ID0gKGRhdGE6IGFueSkgPT4gKHtcbiAgZGF0YSxcbiAgdHlwZTogR3JhcGhpUWxDb25zdGFudHMuRkVUQ0hfUVVFUllfTElTVF9SRVFVRVNUXG59KTtcblxuZXhwb3J0IGNvbnN0IGZldGNoR3JhcGhpUWxMaXN0U3VjY2VzcyA9IChyZXNwb25zZTogYW55KSA9PiAoe1xuICByZXNwb25zZSxcbiAgdHlwZTogR3JhcGhpUWxDb25zdGFudHMuRkVUQ0hfUVVFUllfTElTVF9TVUNDRVNTXG59KTtcblxuXG5leHBvcnQgY29uc3QgZmV0Y2hHcmFwaGlRbExpc3RGYWlsID0gKGVycm9yOiBhbnkpID0+ICh7XG4gIGVycm9yLFxuICB0eXBlOiBHcmFwaGlRbENvbnN0YW50cy5GRVRDSF9RVUVSWV9MSVNUX0ZBSUxcbn0pO1xuXG4iXX0=