"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.resetPermissionState = exports.resetRolePermission = exports.fetchRolePermissionFailure = exports.fetchRolePermissionSuccess = exports.fetchRolePermissionRequest = exports.updateRolePermissionState = exports.createRolePermissionFailure = exports.createRolePermissionSuccess = exports.createRolePermissionRequest = void 0;

var _constants = _interopRequireDefault(require("./constants"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var createRolePermissionRequest = function createRolePermissionRequest(data, updatedRolePermissions) {
  return {
    payload: data,
    type: _constants.default.CREATE_ROLE_PERMISSION_REQUEST,
    updatedRolePermissions: updatedRolePermissions
  };
};

exports.createRolePermissionRequest = createRolePermissionRequest;

var createRolePermissionSuccess = function createRolePermissionSuccess(data) {
  return {
    payload: data,
    type: _constants.default.CREATE_ROLE_PERMISSION_SUCCESS
  };
};

exports.createRolePermissionSuccess = createRolePermissionSuccess;

var createRolePermissionFailure = function createRolePermissionFailure(error) {
  return {
    error: error,
    type: _constants.default.CREATE_ROLE_PERMISSION_FAILURE
  };
};

exports.createRolePermissionFailure = createRolePermissionFailure;

var updateRolePermissionState = function updateRolePermissionState(row, updatedPermissions) {
  return {
    row: row,
    type: _constants.default.UPDATE_ROLE_PERMISSION_STATE,
    updatedPermissions: updatedPermissions
  };
};

exports.updateRolePermissionState = updateRolePermissionState;

var fetchRolePermissionRequest = function fetchRolePermissionRequest(tenantId, modelName) {
  return {
    modelName: modelName,
    tenantId: tenantId,
    type: _constants.default.FETCH_ROLE_PERMISSION_REQUEST
  };
};

exports.fetchRolePermissionRequest = fetchRolePermissionRequest;

var fetchRolePermissionSuccess = function fetchRolePermissionSuccess(data) {
  return {
    payload: data,
    type: _constants.default.FETCH_ROLE_PERMISSION_SUCCESS
  };
};

exports.fetchRolePermissionSuccess = fetchRolePermissionSuccess;

var fetchRolePermissionFailure = function fetchRolePermissionFailure(error) {
  return {
    error: error,
    type: _constants.default.FETCH_ROLE_PERMISSION_FAILURE
  };
};

exports.fetchRolePermissionFailure = fetchRolePermissionFailure;

var resetRolePermission = function resetRolePermission() {
  return {
    type: _constants.default.RESET_ROLE_PERMISSION
  };
};

exports.resetRolePermission = resetRolePermission;

var resetPermissionState = function resetPermissionState() {
  return {
    type: _constants.default.RESET_PERMISSION_STATE
  };
};

exports.resetPermissionState = resetPermissionState;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hY3Rpb25zL3JvbGVwZXJtaXNzaW9uL2luZGV4LnRzIl0sIm5hbWVzIjpbImNyZWF0ZVJvbGVQZXJtaXNzaW9uUmVxdWVzdCIsImRhdGEiLCJ1cGRhdGVkUm9sZVBlcm1pc3Npb25zIiwicGF5bG9hZCIsInR5cGUiLCJDb25zdGFudHMiLCJDUkVBVEVfUk9MRV9QRVJNSVNTSU9OX1JFUVVFU1QiLCJjcmVhdGVSb2xlUGVybWlzc2lvblN1Y2Nlc3MiLCJDUkVBVEVfUk9MRV9QRVJNSVNTSU9OX1NVQ0NFU1MiLCJjcmVhdGVSb2xlUGVybWlzc2lvbkZhaWx1cmUiLCJlcnJvciIsIkNSRUFURV9ST0xFX1BFUk1JU1NJT05fRkFJTFVSRSIsInVwZGF0ZVJvbGVQZXJtaXNzaW9uU3RhdGUiLCJyb3ciLCJ1cGRhdGVkUGVybWlzc2lvbnMiLCJVUERBVEVfUk9MRV9QRVJNSVNTSU9OX1NUQVRFIiwiZmV0Y2hSb2xlUGVybWlzc2lvblJlcXVlc3QiLCJ0ZW5hbnRJZCIsIm1vZGVsTmFtZSIsIkZFVENIX1JPTEVfUEVSTUlTU0lPTl9SRVFVRVNUIiwiZmV0Y2hSb2xlUGVybWlzc2lvblN1Y2Nlc3MiLCJGRVRDSF9ST0xFX1BFUk1JU1NJT05fU1VDQ0VTUyIsImZldGNoUm9sZVBlcm1pc3Npb25GYWlsdXJlIiwiRkVUQ0hfUk9MRV9QRVJNSVNTSU9OX0ZBSUxVUkUiLCJyZXNldFJvbGVQZXJtaXNzaW9uIiwiUkVTRVRfUk9MRV9QRVJNSVNTSU9OIiwicmVzZXRQZXJtaXNzaW9uU3RhdGUiLCJSRVNFVF9QRVJNSVNTSU9OX1NUQVRFIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7Ozs7QUFFTyxJQUFNQSwyQkFBMkIsR0FBRyxTQUE5QkEsMkJBQThCLENBQUNDLElBQUQsRUFBK0JDLHNCQUEvQjtBQUFBLFNBQW1GO0FBQzVIQyxJQUFBQSxPQUFPLEVBQUVGLElBRG1IO0FBRTVIRyxJQUFBQSxJQUFJLEVBQUVDLG1CQUFVQyw4QkFGNEc7QUFHNUhKLElBQUFBLHNCQUFzQixFQUF0QkE7QUFINEgsR0FBbkY7QUFBQSxDQUFwQzs7OztBQU1BLElBQU1LLDJCQUEyQixHQUFHLFNBQTlCQSwyQkFBOEIsQ0FBQ04sSUFBRDtBQUFBLFNBQXdCO0FBQ2pFRSxJQUFBQSxPQUFPLEVBQUVGLElBRHdEO0FBRWpFRyxJQUFBQSxJQUFJLEVBQUVDLG1CQUFVRztBQUZpRCxHQUF4QjtBQUFBLENBQXBDOzs7O0FBS0EsSUFBTUMsMkJBQTJCLEdBQUcsU0FBOUJBLDJCQUE4QixDQUFDQyxLQUFEO0FBQUEsU0FBaUI7QUFDMURBLElBQUFBLEtBQUssRUFBTEEsS0FEMEQ7QUFFMUROLElBQUFBLElBQUksRUFBRUMsbUJBQVVNO0FBRjBDLEdBQWpCO0FBQUEsQ0FBcEM7Ozs7QUFLQSxJQUFNQyx5QkFBeUIsR0FBRyxTQUE1QkEseUJBQTRCLENBQUNDLEdBQUQsRUFBbUJDLGtCQUFuQjtBQUFBLFNBQStDO0FBQ3RGRCxJQUFBQSxHQUFHLEVBQUhBLEdBRHNGO0FBRXRGVCxJQUFBQSxJQUFJLEVBQUVDLG1CQUFVVSw0QkFGc0U7QUFHdEZELElBQUFBLGtCQUFrQixFQUFsQkE7QUFIc0YsR0FBL0M7QUFBQSxDQUFsQzs7OztBQU1BLElBQU1FLDBCQUEwQixHQUFHLFNBQTdCQSwwQkFBNkIsQ0FBQ0MsUUFBRCxFQUFtQkMsU0FBbkI7QUFBQSxTQUEwQztBQUNsRkEsSUFBQUEsU0FBUyxFQUFUQSxTQURrRjtBQUVsRkQsSUFBQUEsUUFBUSxFQUFSQSxRQUZrRjtBQUdsRmIsSUFBQUEsSUFBSSxFQUFFQyxtQkFBVWM7QUFIa0UsR0FBMUM7QUFBQSxDQUFuQzs7OztBQU1BLElBQU1DLDBCQUEwQixHQUFHLFNBQTdCQSwwQkFBNkIsQ0FBQ25CLElBQUQ7QUFBQSxTQUF3QjtBQUNoRUUsSUFBQUEsT0FBTyxFQUFFRixJQUR1RDtBQUVoRUcsSUFBQUEsSUFBSSxFQUFFQyxtQkFBVWdCO0FBRmdELEdBQXhCO0FBQUEsQ0FBbkM7Ozs7QUFLQSxJQUFNQywwQkFBMEIsR0FBRyxTQUE3QkEsMEJBQTZCLENBQUNaLEtBQUQ7QUFBQSxTQUFpQjtBQUN6REEsSUFBQUEsS0FBSyxFQUFMQSxLQUR5RDtBQUV6RE4sSUFBQUEsSUFBSSxFQUFFQyxtQkFBVWtCO0FBRnlDLEdBQWpCO0FBQUEsQ0FBbkM7Ozs7QUFLQSxJQUFNQyxtQkFBbUIsR0FBRyxTQUF0QkEsbUJBQXNCO0FBQUEsU0FBTztBQUN4Q3BCLElBQUFBLElBQUksRUFBRUMsbUJBQVVvQjtBQUR3QixHQUFQO0FBQUEsQ0FBNUI7Ozs7QUFJQSxJQUFNQyxvQkFBb0IsR0FBRyxTQUF2QkEsb0JBQXVCO0FBQUEsU0FBTztBQUN6Q3RCLElBQUFBLElBQUksRUFBRUMsbUJBQVVzQjtBQUR5QixHQUFQO0FBQUEsQ0FBN0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJUGVybWlzc2lvbiwgSVJvbGVQZXJtaXNzaW9uUmVkdWNlciB9IGZyb20gJy4uLy4uL3JlZHVjZXJzL3JvbGVwZXJtaXNzaW9uJztcbmltcG9ydCBDb25zdGFudHMgZnJvbSAnLi9jb25zdGFudHMnO1xuXG5leHBvcnQgY29uc3QgY3JlYXRlUm9sZVBlcm1pc3Npb25SZXF1ZXN0ID0gKGRhdGE6IElSb2xlUGVybWlzc2lvblJlZHVjZXIsIHVwZGF0ZWRSb2xlUGVybWlzc2lvbnM6IElSb2xlUGVybWlzc2lvblJlZHVjZXIpID0+ICh7XG4gIHBheWxvYWQ6IGRhdGEsXG4gIHR5cGU6IENvbnN0YW50cy5DUkVBVEVfUk9MRV9QRVJNSVNTSU9OX1JFUVVFU1QsXG4gIHVwZGF0ZWRSb2xlUGVybWlzc2lvbnNcbn0pO1xuXG5leHBvcnQgY29uc3QgY3JlYXRlUm9sZVBlcm1pc3Npb25TdWNjZXNzID0gKGRhdGE6IElQZXJtaXNzaW9uKSA9PiAoe1xuICBwYXlsb2FkOiBkYXRhLFxuICB0eXBlOiBDb25zdGFudHMuQ1JFQVRFX1JPTEVfUEVSTUlTU0lPTl9TVUNDRVNTXG59KTtcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZVJvbGVQZXJtaXNzaW9uRmFpbHVyZSA9IChlcnJvcjogYW55KSA9PiAoe1xuICBlcnJvcixcbiAgdHlwZTogQ29uc3RhbnRzLkNSRUFURV9ST0xFX1BFUk1JU1NJT05fRkFJTFVSRVxufSk7XG5cbmV4cG9ydCBjb25zdCB1cGRhdGVSb2xlUGVybWlzc2lvblN0YXRlID0gKHJvdzogSVBlcm1pc3Npb24sIHVwZGF0ZWRQZXJtaXNzaW9uczogW10pID0+ICh7XG4gIHJvdyxcbiAgdHlwZTogQ29uc3RhbnRzLlVQREFURV9ST0xFX1BFUk1JU1NJT05fU1RBVEUsXG4gIHVwZGF0ZWRQZXJtaXNzaW9uc1xufSk7XG5cbmV4cG9ydCBjb25zdCBmZXRjaFJvbGVQZXJtaXNzaW9uUmVxdWVzdCA9ICh0ZW5hbnRJZDogc3RyaW5nLCBtb2RlbE5hbWU6IHN0cmluZykgPT4gKHtcbiAgbW9kZWxOYW1lLFxuICB0ZW5hbnRJZCxcbiAgdHlwZTogQ29uc3RhbnRzLkZFVENIX1JPTEVfUEVSTUlTU0lPTl9SRVFVRVNUXG59KTtcblxuZXhwb3J0IGNvbnN0IGZldGNoUm9sZVBlcm1pc3Npb25TdWNjZXNzID0gKGRhdGE6IElQZXJtaXNzaW9uKSA9PiAoe1xuICBwYXlsb2FkOiBkYXRhLFxuICB0eXBlOiBDb25zdGFudHMuRkVUQ0hfUk9MRV9QRVJNSVNTSU9OX1NVQ0NFU1Ncbn0pO1xuXG5leHBvcnQgY29uc3QgZmV0Y2hSb2xlUGVybWlzc2lvbkZhaWx1cmUgPSAoZXJyb3I6IGFueSkgPT4gKHtcbiAgZXJyb3IsXG4gIHR5cGU6IENvbnN0YW50cy5GRVRDSF9ST0xFX1BFUk1JU1NJT05fRkFJTFVSRVxufSk7XG5cbmV4cG9ydCBjb25zdCByZXNldFJvbGVQZXJtaXNzaW9uID0gKCkgPT4gKHtcbiAgdHlwZTogQ29uc3RhbnRzLlJFU0VUX1JPTEVfUEVSTUlTU0lPTlxufSk7XG5cbmV4cG9ydCBjb25zdCByZXNldFBlcm1pc3Npb25TdGF0ZSA9ICgpID0+ICh7XG4gIHR5cGU6IENvbnN0YW50cy5SRVNFVF9QRVJNSVNTSU9OX1NUQVRFXG59KTtcbiJdfQ==