"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.updateFormSchemaState = exports.fetchTemplateListFailure = exports.fetchTemplateListSuccess = exports.fetchTemplateList = exports.fetchFormSchemaListFailure = exports.fetchFormSchemaListSuccess = exports.fetchFormSchemaList = exports.fetchFormSchemaFailure = exports.fetchFormSchemaSuccess = exports.fetchFormSchemaRequest = exports.clearFormSchemeData = exports.createFormSchemaFailure = exports.createFormSchemaSuccess = exports.createFormSchemaRequest = exports.addFormSchema = void 0;

var _constants = _interopRequireDefault(require("./constants"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var addFormSchema = function addFormSchema(data) {
  return {
    payload: data,
    type: _constants.default.ADD_FORM_SCHEMA
  };
};

exports.addFormSchema = addFormSchema;

var createFormSchemaRequest = function createFormSchemaRequest(data, schemaId) {
  return {
    payload: data,
    schemaId: schemaId,
    type: _constants.default.CREATE_FORM_SCHEMA_REQUEST
  };
};

exports.createFormSchemaRequest = createFormSchemaRequest;

var createFormSchemaSuccess = function createFormSchemaSuccess(data) {
  return {
    payload: data,
    type: _constants.default.CREATE_FORM_SCHEMA_SUCCESS
  };
};

exports.createFormSchemaSuccess = createFormSchemaSuccess;

var createFormSchemaFailure = function createFormSchemaFailure(error) {
  return {
    error: error,
    type: _constants.default.CREATE_FORM_SCHEMA_FAILURE
  };
};

exports.createFormSchemaFailure = createFormSchemaFailure;

var clearFormSchemeData = function clearFormSchemeData() {
  return {
    type: _constants.default.CLEAR_FORM_SCHEMA_DATA
  };
};

exports.clearFormSchemeData = clearFormSchemeData;

var fetchFormSchemaRequest = function fetchFormSchemaRequest(schemaId, callback) {
  return {
    callback: callback,
    schemaId: schemaId,
    type: _constants.default.FETCH_FORM_SCHEMA_REQUEST
  };
};

exports.fetchFormSchemaRequest = fetchFormSchemaRequest;

var fetchFormSchemaSuccess = function fetchFormSchemaSuccess(data) {
  return {
    payload: data,
    type: _constants.default.FETCH_FORM_SCHEMA_SUCCESS
  };
};

exports.fetchFormSchemaSuccess = fetchFormSchemaSuccess;

var fetchFormSchemaFailure = function fetchFormSchemaFailure(error) {
  return {
    error: error,
    type: _constants.default.FETCH_FORM_SCHEMA_FAILURE
  };
};

exports.fetchFormSchemaFailure = fetchFormSchemaFailure;

var fetchFormSchemaList = function fetchFormSchemaList(limit, currentPage, sortField, sortOrder) {
  return {
    currentPage: currentPage,
    limit: limit,
    sortField: sortField,
    sortOrder: sortOrder,
    type: _constants.default.FETCH_FORM_SCHEMA_LIST
  };
};

exports.fetchFormSchemaList = fetchFormSchemaList;

var fetchFormSchemaListSuccess = function fetchFormSchemaListSuccess(data) {
  return {
    payload: data,
    type: _constants.default.FETCH_FORM_SCHEMA_LIST_SUCCESS
  };
};

exports.fetchFormSchemaListSuccess = fetchFormSchemaListSuccess;

var fetchFormSchemaListFailure = function fetchFormSchemaListFailure(error) {
  return {
    error: error,
    type: _constants.default.FETCH_FORM_SCHEMA_LIST_FAILURE
  };
};

exports.fetchFormSchemaListFailure = fetchFormSchemaListFailure;

var fetchTemplateList = function fetchTemplateList(callback) {
  return {
    callback: callback,
    type: _constants.default.FETCH_TEMPLATE_LIST
  };
};

exports.fetchTemplateList = fetchTemplateList;

var fetchTemplateListSuccess = function fetchTemplateListSuccess(data) {
  return {
    payload: data,
    type: _constants.default.FETCH_TEMPLATE_LIST_SUCCESS
  };
};

exports.fetchTemplateListSuccess = fetchTemplateListSuccess;

var fetchTemplateListFailure = function fetchTemplateListFailure(error) {
  return {
    error: error,
    type: _constants.default.FETCH_TEMPLATE_LIST_FAILURE
  };
};

exports.fetchTemplateListFailure = fetchTemplateListFailure;

var updateFormSchemaState = function updateFormSchemaState(data) {
  return {
    data: data,
    type: _constants.default.UPDATE_FORM_SCHEMA_STATE
  };
};

exports.updateFormSchemaState = updateFormSchemaState;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hY3Rpb25zL2Zvcm1zY2hlbWEvaW5kZXgudHMiXSwibmFtZXMiOlsiYWRkRm9ybVNjaGVtYSIsImRhdGEiLCJwYXlsb2FkIiwidHlwZSIsIkZvcm1TY2hlbWFDb25zdGFudHMiLCJBRERfRk9STV9TQ0hFTUEiLCJjcmVhdGVGb3JtU2NoZW1hUmVxdWVzdCIsInNjaGVtYUlkIiwiQ1JFQVRFX0ZPUk1fU0NIRU1BX1JFUVVFU1QiLCJjcmVhdGVGb3JtU2NoZW1hU3VjY2VzcyIsIkNSRUFURV9GT1JNX1NDSEVNQV9TVUNDRVNTIiwiY3JlYXRlRm9ybVNjaGVtYUZhaWx1cmUiLCJlcnJvciIsIkNSRUFURV9GT1JNX1NDSEVNQV9GQUlMVVJFIiwiY2xlYXJGb3JtU2NoZW1lRGF0YSIsIkNMRUFSX0ZPUk1fU0NIRU1BX0RBVEEiLCJmZXRjaEZvcm1TY2hlbWFSZXF1ZXN0IiwiY2FsbGJhY2siLCJGRVRDSF9GT1JNX1NDSEVNQV9SRVFVRVNUIiwiZmV0Y2hGb3JtU2NoZW1hU3VjY2VzcyIsIkZFVENIX0ZPUk1fU0NIRU1BX1NVQ0NFU1MiLCJmZXRjaEZvcm1TY2hlbWFGYWlsdXJlIiwiRkVUQ0hfRk9STV9TQ0hFTUFfRkFJTFVSRSIsImZldGNoRm9ybVNjaGVtYUxpc3QiLCJsaW1pdCIsImN1cnJlbnRQYWdlIiwic29ydEZpZWxkIiwic29ydE9yZGVyIiwiRkVUQ0hfRk9STV9TQ0hFTUFfTElTVCIsImZldGNoRm9ybVNjaGVtYUxpc3RTdWNjZXNzIiwiRkVUQ0hfRk9STV9TQ0hFTUFfTElTVF9TVUNDRVNTIiwiZmV0Y2hGb3JtU2NoZW1hTGlzdEZhaWx1cmUiLCJGRVRDSF9GT1JNX1NDSEVNQV9MSVNUX0ZBSUxVUkUiLCJmZXRjaFRlbXBsYXRlTGlzdCIsIkZFVENIX1RFTVBMQVRFX0xJU1QiLCJmZXRjaFRlbXBsYXRlTGlzdFN1Y2Nlc3MiLCJGRVRDSF9URU1QTEFURV9MSVNUX1NVQ0NFU1MiLCJmZXRjaFRlbXBsYXRlTGlzdEZhaWx1cmUiLCJGRVRDSF9URU1QTEFURV9MSVNUX0ZBSUxVUkUiLCJ1cGRhdGVGb3JtU2NoZW1hU3RhdGUiLCJVUERBVEVfRk9STV9TQ0hFTUFfU1RBVEUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQTs7OztBQUVPLElBQU1BLGFBQWEsR0FBRyxTQUFoQkEsYUFBZ0IsQ0FBQ0MsSUFBRDtBQUFBLFNBQWdCO0FBQzNDQyxJQUFBQSxPQUFPLEVBQUVELElBRGtDO0FBRTNDRSxJQUFBQSxJQUFJLEVBQUVDLG1CQUFvQkM7QUFGaUIsR0FBaEI7QUFBQSxDQUF0Qjs7OztBQUtBLElBQU1DLHVCQUF1QixHQUFHLFNBQTFCQSx1QkFBMEIsQ0FBQ0wsSUFBRCxFQUFvQk0sUUFBcEI7QUFBQSxTQUEyQztBQUNoRkwsSUFBQUEsT0FBTyxFQUFFRCxJQUR1RTtBQUVoRk0sSUFBQUEsUUFBUSxFQUFSQSxRQUZnRjtBQUdoRkosSUFBQUEsSUFBSSxFQUFFQyxtQkFBb0JJO0FBSHNELEdBQTNDO0FBQUEsQ0FBaEM7Ozs7QUFNQSxJQUFNQyx1QkFBdUIsR0FBRyxTQUExQkEsdUJBQTBCLENBQUNSLElBQUQ7QUFBQSxTQUF3QjtBQUM3REMsSUFBQUEsT0FBTyxFQUFFRCxJQURvRDtBQUU3REUsSUFBQUEsSUFBSSxFQUFFQyxtQkFBb0JNO0FBRm1DLEdBQXhCO0FBQUEsQ0FBaEM7Ozs7QUFLQSxJQUFNQyx1QkFBdUIsR0FBRyxTQUExQkEsdUJBQTBCLENBQUNDLEtBQUQ7QUFBQSxTQUFvQjtBQUN6REEsSUFBQUEsS0FBSyxFQUFMQSxLQUR5RDtBQUV6RFQsSUFBQUEsSUFBSSxFQUFFQyxtQkFBb0JTO0FBRitCLEdBQXBCO0FBQUEsQ0FBaEM7Ozs7QUFLQSxJQUFNQyxtQkFBbUIsR0FBRyxTQUF0QkEsbUJBQXNCO0FBQUEsU0FBTztBQUN4Q1gsSUFBQUEsSUFBSSxFQUFFQyxtQkFBb0JXO0FBRGMsR0FBUDtBQUFBLENBQTVCOzs7O0FBSUEsSUFBTUMsc0JBQXNCLEdBQUcsU0FBekJBLHNCQUF5QixDQUFDVCxRQUFELEVBQW1CVSxRQUFuQjtBQUFBLFNBQStEO0FBQ25HQSxJQUFBQSxRQUFRLEVBQVJBLFFBRG1HO0FBRW5HVixJQUFBQSxRQUFRLEVBQVJBLFFBRm1HO0FBR25HSixJQUFBQSxJQUFJLEVBQUVDLG1CQUFvQmM7QUFIeUUsR0FBL0Q7QUFBQSxDQUEvQjs7OztBQU1BLElBQU1DLHNCQUFzQixHQUFHLFNBQXpCQSxzQkFBeUIsQ0FBQ2xCLElBQUQ7QUFBQSxTQUF3QjtBQUM1REMsSUFBQUEsT0FBTyxFQUFFRCxJQURtRDtBQUU1REUsSUFBQUEsSUFBSSxFQUFFQyxtQkFBb0JnQjtBQUZrQyxHQUF4QjtBQUFBLENBQS9COzs7O0FBS0EsSUFBTUMsc0JBQXNCLEdBQUcsU0FBekJBLHNCQUF5QixDQUFDVCxLQUFEO0FBQUEsU0FBb0I7QUFDeERBLElBQUFBLEtBQUssRUFBTEEsS0FEd0Q7QUFFeERULElBQUFBLElBQUksRUFBRUMsbUJBQW9Ca0I7QUFGOEIsR0FBcEI7QUFBQSxDQUEvQjs7OztBQUtBLElBQU1DLG1CQUFtQixHQUFHLFNBQXRCQSxtQkFBc0IsQ0FBQ0MsS0FBRCxFQUFpQkMsV0FBakIsRUFBdUNDLFNBQXZDLEVBQTJEQyxTQUEzRDtBQUFBLFNBQW1GO0FBQ3BIRixJQUFBQSxXQUFXLEVBQVhBLFdBRG9IO0FBRXBIRCxJQUFBQSxLQUFLLEVBQUxBLEtBRm9IO0FBR3BIRSxJQUFBQSxTQUFTLEVBQVRBLFNBSG9IO0FBSXBIQyxJQUFBQSxTQUFTLEVBQVRBLFNBSm9IO0FBS3BIeEIsSUFBQUEsSUFBSSxFQUFFQyxtQkFBb0J3QjtBQUwwRixHQUFuRjtBQUFBLENBQTVCOzs7O0FBUUEsSUFBTUMsMEJBQTBCLEdBQUcsU0FBN0JBLDBCQUE2QixDQUFDNUIsSUFBRDtBQUFBLFNBQXlCO0FBQ2pFQyxJQUFBQSxPQUFPLEVBQUVELElBRHdEO0FBRWpFRSxJQUFBQSxJQUFJLEVBQUVDLG1CQUFvQjBCO0FBRnVDLEdBQXpCO0FBQUEsQ0FBbkM7Ozs7QUFLQSxJQUFNQywwQkFBMEIsR0FBRyxTQUE3QkEsMEJBQTZCLENBQUNuQixLQUFEO0FBQUEsU0FBb0I7QUFDNURBLElBQUFBLEtBQUssRUFBTEEsS0FENEQ7QUFFNURULElBQUFBLElBQUksRUFBRUMsbUJBQW9CNEI7QUFGa0MsR0FBcEI7QUFBQSxDQUFuQzs7OztBQUtBLElBQU1DLGlCQUFpQixHQUFHLFNBQXBCQSxpQkFBb0IsQ0FBQ2hCLFFBQUQ7QUFBQSxTQUFvRDtBQUNuRkEsSUFBQUEsUUFBUSxFQUFSQSxRQURtRjtBQUVuRmQsSUFBQUEsSUFBSSxFQUFFQyxtQkFBb0I4QjtBQUZ5RCxHQUFwRDtBQUFBLENBQTFCOzs7O0FBS0EsSUFBTUMsd0JBQXdCLEdBQUcsU0FBM0JBLHdCQUEyQixDQUFDbEMsSUFBRDtBQUFBLFNBQWdCO0FBQ3REQyxJQUFBQSxPQUFPLEVBQUVELElBRDZDO0FBRXRERSxJQUFBQSxJQUFJLEVBQUVDLG1CQUFvQmdDO0FBRjRCLEdBQWhCO0FBQUEsQ0FBakM7Ozs7QUFLQSxJQUFNQyx3QkFBd0IsR0FBRyxTQUEzQkEsd0JBQTJCLENBQUN6QixLQUFEO0FBQUEsU0FBaUI7QUFDdkRBLElBQUFBLEtBQUssRUFBTEEsS0FEdUQ7QUFFdkRULElBQUFBLElBQUksRUFBRUMsbUJBQW9Ca0M7QUFGNkIsR0FBakI7QUFBQSxDQUFqQzs7OztBQUtBLElBQU1DLHFCQUFxQixHQUFHLFNBQXhCQSxxQkFBd0IsQ0FBQ3RDLElBQUQ7QUFBQSxTQUF5QjtBQUM1REEsSUFBQUEsSUFBSSxFQUFKQSxJQUQ0RDtBQUU1REUsSUFBQUEsSUFBSSxFQUFFQyxtQkFBb0JvQztBQUZrQyxHQUF6QjtBQUFBLENBQTlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSUZvcm1TY2hlbWEsIElGb3JtU2NoZW1hcyB9IGZyb20gJy4uLy4uL3JlZHVjZXJzL2Zvcm1zY2hlbWEnO1xuaW1wb3J0IEZvcm1TY2hlbWFDb25zdGFudHMgZnJvbSAnLi9jb25zdGFudHMnO1xuXG5leHBvcnQgY29uc3QgYWRkRm9ybVNjaGVtYSA9IChkYXRhOiBhbnkpID0+ICh7XG4gIHBheWxvYWQ6IGRhdGEsXG4gIHR5cGU6IEZvcm1TY2hlbWFDb25zdGFudHMuQUREX0ZPUk1fU0NIRU1BXG59KTtcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZUZvcm1TY2hlbWFSZXF1ZXN0ID0gKGRhdGE6IElGb3JtU2NoZW1hLCBzY2hlbWFJZD86IHN0cmluZykgPT4gKHtcbiAgcGF5bG9hZDogZGF0YSxcbiAgc2NoZW1hSWQsXG4gIHR5cGU6IEZvcm1TY2hlbWFDb25zdGFudHMuQ1JFQVRFX0ZPUk1fU0NIRU1BX1JFUVVFU1Rcbn0pO1xuXG5leHBvcnQgY29uc3QgY3JlYXRlRm9ybVNjaGVtYVN1Y2Nlc3MgPSAoZGF0YTogSUZvcm1TY2hlbWEpID0+ICh7XG4gIHBheWxvYWQ6IGRhdGEsXG4gIHR5cGU6IEZvcm1TY2hlbWFDb25zdGFudHMuQ1JFQVRFX0ZPUk1fU0NIRU1BX1NVQ0NFU1Ncbn0pO1xuXG5leHBvcnQgY29uc3QgY3JlYXRlRm9ybVNjaGVtYUZhaWx1cmUgPSAoZXJyb3I6IE9iamVjdCkgPT4gKHtcbiAgZXJyb3IsXG4gIHR5cGU6IEZvcm1TY2hlbWFDb25zdGFudHMuQ1JFQVRFX0ZPUk1fU0NIRU1BX0ZBSUxVUkVcbn0pO1xuXG5leHBvcnQgY29uc3QgY2xlYXJGb3JtU2NoZW1lRGF0YSA9ICgpID0+ICh7XG4gIHR5cGU6IEZvcm1TY2hlbWFDb25zdGFudHMuQ0xFQVJfRk9STV9TQ0hFTUFfREFUQVxufSk7XG5cbmV4cG9ydCBjb25zdCBmZXRjaEZvcm1TY2hlbWFSZXF1ZXN0ID0gKHNjaGVtYUlkOiBzdHJpbmcsIGNhbGxiYWNrPzogKGZvcm06IElGb3JtU2NoZW1hKSA9PiB2b2lkKSA9PiAoe1xuICBjYWxsYmFjayxcbiAgc2NoZW1hSWQsXG4gIHR5cGU6IEZvcm1TY2hlbWFDb25zdGFudHMuRkVUQ0hfRk9STV9TQ0hFTUFfUkVRVUVTVFxufSk7XG5cbmV4cG9ydCBjb25zdCBmZXRjaEZvcm1TY2hlbWFTdWNjZXNzID0gKGRhdGE6IElGb3JtU2NoZW1hKSA9PiAoe1xuICBwYXlsb2FkOiBkYXRhLFxuICB0eXBlOiBGb3JtU2NoZW1hQ29uc3RhbnRzLkZFVENIX0ZPUk1fU0NIRU1BX1NVQ0NFU1Ncbn0pO1xuXG5leHBvcnQgY29uc3QgZmV0Y2hGb3JtU2NoZW1hRmFpbHVyZSA9IChlcnJvcjogT2JqZWN0KSA9PiAoe1xuICBlcnJvcixcbiAgdHlwZTogRm9ybVNjaGVtYUNvbnN0YW50cy5GRVRDSF9GT1JNX1NDSEVNQV9GQUlMVVJFXG59KTtcblxuZXhwb3J0IGNvbnN0IGZldGNoRm9ybVNjaGVtYUxpc3QgPSAobGltaXQ/OiBudW1iZXIsIGN1cnJlbnRQYWdlPzogbnVtYmVyLCBzb3J0RmllbGQ/OiBzdHJpbmcsIHNvcnRPcmRlcj86IG51bWJlcikgPT4gKHtcbiAgY3VycmVudFBhZ2UsXG4gIGxpbWl0LFxuICBzb3J0RmllbGQsXG4gIHNvcnRPcmRlcixcbiAgdHlwZTogRm9ybVNjaGVtYUNvbnN0YW50cy5GRVRDSF9GT1JNX1NDSEVNQV9MSVNUXG59KTtcblxuZXhwb3J0IGNvbnN0IGZldGNoRm9ybVNjaGVtYUxpc3RTdWNjZXNzID0gKGRhdGE6IElGb3JtU2NoZW1hcykgPT4gKHtcbiAgcGF5bG9hZDogZGF0YSxcbiAgdHlwZTogRm9ybVNjaGVtYUNvbnN0YW50cy5GRVRDSF9GT1JNX1NDSEVNQV9MSVNUX1NVQ0NFU1Ncbn0pO1xuXG5leHBvcnQgY29uc3QgZmV0Y2hGb3JtU2NoZW1hTGlzdEZhaWx1cmUgPSAoZXJyb3I6IE9iamVjdCkgPT4gKHtcbiAgZXJyb3IsXG4gIHR5cGU6IEZvcm1TY2hlbWFDb25zdGFudHMuRkVUQ0hfRk9STV9TQ0hFTUFfTElTVF9GQUlMVVJFXG59KTtcblxuZXhwb3J0IGNvbnN0IGZldGNoVGVtcGxhdGVMaXN0ID0gKGNhbGxiYWNrPzogKHRlbXBsYXRlczogSUZvcm1TY2hlbWFbXSkgPT4gdm9pZCkgPT4gKHtcbiAgY2FsbGJhY2ssXG4gIHR5cGU6IEZvcm1TY2hlbWFDb25zdGFudHMuRkVUQ0hfVEVNUExBVEVfTElTVFxufSk7XG5cbmV4cG9ydCBjb25zdCBmZXRjaFRlbXBsYXRlTGlzdFN1Y2Nlc3MgPSAoZGF0YTogYW55KSA9PiAoe1xuICBwYXlsb2FkOiBkYXRhLFxuICB0eXBlOiBGb3JtU2NoZW1hQ29uc3RhbnRzLkZFVENIX1RFTVBMQVRFX0xJU1RfU1VDQ0VTU1xufSk7XG5cbmV4cG9ydCBjb25zdCBmZXRjaFRlbXBsYXRlTGlzdEZhaWx1cmUgPSAoZXJyb3I6IGFueSkgPT4gKHtcbiAgZXJyb3IsXG4gIHR5cGU6IEZvcm1TY2hlbWFDb25zdGFudHMuRkVUQ0hfVEVNUExBVEVfTElTVF9GQUlMVVJFXG59KTtcblxuZXhwb3J0IGNvbnN0IHVwZGF0ZUZvcm1TY2hlbWFTdGF0ZSA9IChkYXRhPzogSUZvcm1TY2hlbWEpID0+ICh7XG4gIGRhdGEsXG4gIHR5cGU6IEZvcm1TY2hlbWFDb25zdGFudHMuVVBEQVRFX0ZPUk1fU0NIRU1BX1NUQVRFXG59KTtcbiJdfQ==