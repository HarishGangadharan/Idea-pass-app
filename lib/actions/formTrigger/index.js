"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.clearTriggerData = exports.updateFormTriggerState = exports.saveFormTriggerFailure = exports.saveFormTriggerSuccess = exports.saveFormTriggerRequest = exports.fetchFormTriggerListFailure = exports.fetchFormTriggerListSuccess = exports.fetchFormTriggerListRequest = exports.fetchTargetFormFieldsFailure = exports.fetchTargetFormFieldsSuccess = exports.fetchTargetFormFieldsRequest = exports.fetchSourceFormFieldsFailure = exports.fetchSourceFormFieldsSuccess = exports.fetchSourceFormFieldsRequest = exports.fetchFormTriggerFailure = exports.fetchFormTriggerSuccess = exports.fetchFormTriggerRequest = void 0;

var _constants = _interopRequireDefault(require("./constants"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var fetchFormTriggerRequest = function fetchFormTriggerRequest(formTriggerId, callBack) {
  return {
    callBack: callBack,
    formTriggerId: formTriggerId,
    type: _constants.default.FETCH_FORM_TRIGGER_REQUEST
  };
};

exports.fetchFormTriggerRequest = fetchFormTriggerRequest;

var fetchFormTriggerSuccess = function fetchFormTriggerSuccess(data) {
  return {
    data: data,
    type: _constants.default.FETCH_FORM_TRIGGER_SUCCESS
  };
};

exports.fetchFormTriggerSuccess = fetchFormTriggerSuccess;

var fetchFormTriggerFailure = function fetchFormTriggerFailure(error) {
  return {
    error: error,
    type: _constants.default.FETCH_FORM_TRIGGER_FAILURE
  };
};

exports.fetchFormTriggerFailure = fetchFormTriggerFailure;

var fetchSourceFormFieldsRequest = function fetchSourceFormFieldsRequest(formName) {
  return {
    formName: formName,
    type: _constants.default.FETCH_SOURCE_FORM_FIELDS_REQUEST
  };
};

exports.fetchSourceFormFieldsRequest = fetchSourceFormFieldsRequest;

var fetchSourceFormFieldsSuccess = function fetchSourceFormFieldsSuccess(data) {
  return {
    data: data,
    type: _constants.default.FETCH_SOURCE_FORM_FIELDS_SUCCESS
  };
};

exports.fetchSourceFormFieldsSuccess = fetchSourceFormFieldsSuccess;

var fetchSourceFormFieldsFailure = function fetchSourceFormFieldsFailure(error) {
  return {
    error: error,
    type: _constants.default.FETCH_SOURCE_FORM_FIELDS_FAILURE
  };
};

exports.fetchSourceFormFieldsFailure = fetchSourceFormFieldsFailure;

var fetchTargetFormFieldsRequest = function fetchTargetFormFieldsRequest(formName) {
  return {
    formName: formName,
    type: _constants.default.FETCH_TARGET_FORM_FIELDS_REQUEST
  };
};

exports.fetchTargetFormFieldsRequest = fetchTargetFormFieldsRequest;

var fetchTargetFormFieldsSuccess = function fetchTargetFormFieldsSuccess(data) {
  return {
    data: data,
    type: _constants.default.FETCH_TARGET_FORM_FIELDS_SUCCESS
  };
};

exports.fetchTargetFormFieldsSuccess = fetchTargetFormFieldsSuccess;

var fetchTargetFormFieldsFailure = function fetchTargetFormFieldsFailure(error) {
  return {
    error: error,
    type: _constants.default.FETCH_TARGET_FORM_FIELDS_FAILURE
  };
};

exports.fetchTargetFormFieldsFailure = fetchTargetFormFieldsFailure;

var fetchFormTriggerListRequest = function fetchFormTriggerListRequest(formId, limit, currentPage) {
  return {
    currentPage: currentPage,
    formId: formId,
    limit: limit,
    type: _constants.default.FETCH_FORM_TRIGGER_LIST_REQUEST
  };
};

exports.fetchFormTriggerListRequest = fetchFormTriggerListRequest;

var fetchFormTriggerListSuccess = function fetchFormTriggerListSuccess(data) {
  return {
    data: data,
    type: _constants.default.FETCH_FORM_TRIGGER_LIST_SUCCESS
  };
};

exports.fetchFormTriggerListSuccess = fetchFormTriggerListSuccess;

var fetchFormTriggerListFailure = function fetchFormTriggerListFailure(error) {
  return {
    error: error,
    type: _constants.default.FETCH_FORM_TRIGGER_LIST_FAILURE
  };
};

exports.fetchFormTriggerListFailure = fetchFormTriggerListFailure;

var saveFormTriggerRequest = function saveFormTriggerRequest(data, formTriggerId) {
  return {
    data: data,
    formTriggerId: formTriggerId,
    type: _constants.default.SAVE_FORM_TRIGGER_REQUEST
  };
};

exports.saveFormTriggerRequest = saveFormTriggerRequest;

var saveFormTriggerSuccess = function saveFormTriggerSuccess(data) {
  return {
    data: data,
    type: _constants.default.SAVE_FORM_TRIGGER_SUCCESS
  };
};

exports.saveFormTriggerSuccess = saveFormTriggerSuccess;

var saveFormTriggerFailure = function saveFormTriggerFailure(error) {
  return {
    error: error,
    type: _constants.default.SAVE_FORM_TRIGGER_FAILURE
  };
};

exports.saveFormTriggerFailure = saveFormTriggerFailure;

var updateFormTriggerState = function updateFormTriggerState(data) {
  return {
    data: data,
    type: _constants.default.UPDATE_FORM_TRIGGER_STATE
  };
};

exports.updateFormTriggerState = updateFormTriggerState;

var clearTriggerData = function clearTriggerData() {
  return {
    type: _constants.default.CLEAR_FORM_TRIGGER_DATA
  };
};

exports.clearTriggerData = clearTriggerData;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,