"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.resetInitialState = exports.getAllEmailTemplatesFail = exports.getAllEmailTemplatesSuccess = exports.getAllEmailTemplates = exports.getEmailTemplateFail = exports.getEmailTemplateSuccess = exports.getEmailTemplate = exports.createOrUpdateEmailTemplateFail = exports.createOrUpdateEmailTemplateSuccess = exports.createOrUpdateEmailTemplate = void 0;

var _constants = _interopRequireDefault(require("./constants"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var createOrUpdateEmailTemplate = function createOrUpdateEmailTemplate(data) {
  return {
    data: data,
    type: _constants.default.CREATE_OR_UPDATE_EMAIL_TEMPLATE
  };
};

exports.createOrUpdateEmailTemplate = createOrUpdateEmailTemplate;

var createOrUpdateEmailTemplateSuccess = function createOrUpdateEmailTemplateSuccess(response) {
  return {
    response: response,
    type: _constants.default.CREATE_OR_UPDATE_EMAIL_TEMPLATE_SUCCESS
  };
};

exports.createOrUpdateEmailTemplateSuccess = createOrUpdateEmailTemplateSuccess;

var createOrUpdateEmailTemplateFail = function createOrUpdateEmailTemplateFail(error) {
  return {
    error: error,
    type: _constants.default.CREATE_OR_UPDATE_EMAIL_TEMPLATE_FAIL
  };
};

exports.createOrUpdateEmailTemplateFail = createOrUpdateEmailTemplateFail;

var getEmailTemplate = function getEmailTemplate(id, callback) {
  return {
    callback: callback,
    id: id,
    type: _constants.default.GET_EMAIL_TEMPLATE
  };
};

exports.getEmailTemplate = getEmailTemplate;

var getEmailTemplateSuccess = function getEmailTemplateSuccess(response) {
  return {
    response: response,
    type: _constants.default.GET_EMAIL_TEMPLATE_SUCCESS
  };
};

exports.getEmailTemplateSuccess = getEmailTemplateSuccess;

var getEmailTemplateFail = function getEmailTemplateFail(error) {
  return {
    error: error,
    type: _constants.default.GET_EMAIL_TEMPLATE_FAIL
  };
};

exports.getEmailTemplateFail = getEmailTemplateFail;

var getAllEmailTemplates = function getAllEmailTemplates(data) {
  return {
    data: data,
    type: _constants.default.GET_ALL_EMAIL_TEMPLATES
  };
};

exports.getAllEmailTemplates = getAllEmailTemplates;

var getAllEmailTemplatesSuccess = function getAllEmailTemplatesSuccess(response) {
  return {
    response: response,
    type: _constants.default.GET_ALL_EMAIL_TEMPLATES_SUCCESS
  };
};

exports.getAllEmailTemplatesSuccess = getAllEmailTemplatesSuccess;

var getAllEmailTemplatesFail = function getAllEmailTemplatesFail(error) {
  return {
    error: error,
    type: _constants.default.GET_ALL_EMAIL_TEMPLATES_FAIL
  };
};

exports.getAllEmailTemplatesFail = getAllEmailTemplatesFail;

var resetInitialState = function resetInitialState() {
  return {
    type: _constants.default.RESET_INITIAL_STATE
  };
};

exports.resetInitialState = resetInitialState;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hY3Rpb25zL2VtYWlsVGVtcGxhdGUvaW5kZXgudHMiXSwibmFtZXMiOlsiY3JlYXRlT3JVcGRhdGVFbWFpbFRlbXBsYXRlIiwiZGF0YSIsInR5cGUiLCJFbWFpbFRlbXBsYXRlQ29uc3RhbnRzIiwiQ1JFQVRFX09SX1VQREFURV9FTUFJTF9URU1QTEFURSIsImNyZWF0ZU9yVXBkYXRlRW1haWxUZW1wbGF0ZVN1Y2Nlc3MiLCJyZXNwb25zZSIsIkNSRUFURV9PUl9VUERBVEVfRU1BSUxfVEVNUExBVEVfU1VDQ0VTUyIsImNyZWF0ZU9yVXBkYXRlRW1haWxUZW1wbGF0ZUZhaWwiLCJlcnJvciIsIkNSRUFURV9PUl9VUERBVEVfRU1BSUxfVEVNUExBVEVfRkFJTCIsImdldEVtYWlsVGVtcGxhdGUiLCJpZCIsImNhbGxiYWNrIiwiR0VUX0VNQUlMX1RFTVBMQVRFIiwiZ2V0RW1haWxUZW1wbGF0ZVN1Y2Nlc3MiLCJHRVRfRU1BSUxfVEVNUExBVEVfU1VDQ0VTUyIsImdldEVtYWlsVGVtcGxhdGVGYWlsIiwiR0VUX0VNQUlMX1RFTVBMQVRFX0ZBSUwiLCJnZXRBbGxFbWFpbFRlbXBsYXRlcyIsIkdFVF9BTExfRU1BSUxfVEVNUExBVEVTIiwiZ2V0QWxsRW1haWxUZW1wbGF0ZXNTdWNjZXNzIiwiR0VUX0FMTF9FTUFJTF9URU1QTEFURVNfU1VDQ0VTUyIsImdldEFsbEVtYWlsVGVtcGxhdGVzRmFpbCIsIkdFVF9BTExfRU1BSUxfVEVNUExBVEVTX0ZBSUwiLCJyZXNldEluaXRpYWxTdGF0ZSIsIlJFU0VUX0lOSVRJQUxfU1RBVEUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQTs7OztBQTBCTyxJQUFNQSwyQkFBMkIsR0FBRyxTQUE5QkEsMkJBQThCLENBQUNDLElBQUQ7QUFBQSxTQUEyQjtBQUNwRUEsSUFBQUEsSUFBSSxFQUFKQSxJQURvRTtBQUVwRUMsSUFBQUEsSUFBSSxFQUFFQyxtQkFBdUJDO0FBRnVDLEdBQTNCO0FBQUEsQ0FBcEM7Ozs7QUFNQSxJQUFNQyxrQ0FBa0MsR0FBRyxTQUFyQ0Esa0NBQXFDLENBQUNDLFFBQUQ7QUFBQSxTQUFvQjtBQUNwRUEsSUFBQUEsUUFBUSxFQUFSQSxRQURvRTtBQUVwRUosSUFBQUEsSUFBSSxFQUFFQyxtQkFBdUJJO0FBRnVDLEdBQXBCO0FBQUEsQ0FBM0M7Ozs7QUFLQSxJQUFNQywrQkFBK0IsR0FBRyxTQUFsQ0EsK0JBQWtDLENBQUNDLEtBQUQ7QUFBQSxTQUFpQjtBQUM5REEsSUFBQUEsS0FBSyxFQUFMQSxLQUQ4RDtBQUU5RFAsSUFBQUEsSUFBSSxFQUFFQyxtQkFBdUJPO0FBRmlDLEdBQWpCO0FBQUEsQ0FBeEM7Ozs7QUFNQSxJQUFNQyxnQkFBZ0IsR0FBRyxTQUFuQkEsZ0JBQW1CLENBQUNDLEVBQUQsRUFBYUMsUUFBYjtBQUFBLFNBQWdFO0FBQzlGQSxJQUFBQSxRQUFRLEVBQVJBLFFBRDhGO0FBRTlGRCxJQUFBQSxFQUFFLEVBQUZBLEVBRjhGO0FBRzlGVixJQUFBQSxJQUFJLEVBQUVDLG1CQUF1Qlc7QUFIaUUsR0FBaEU7QUFBQSxDQUF6Qjs7OztBQU9BLElBQU1DLHVCQUF1QixHQUFHLFNBQTFCQSx1QkFBMEIsQ0FBQ1QsUUFBRDtBQUFBLFNBQW9CO0FBQ3pEQSxJQUFBQSxRQUFRLEVBQVJBLFFBRHlEO0FBRXpESixJQUFBQSxJQUFJLEVBQUVDLG1CQUF1QmE7QUFGNEIsR0FBcEI7QUFBQSxDQUFoQzs7OztBQUtBLElBQU1DLG9CQUFvQixHQUFHLFNBQXZCQSxvQkFBdUIsQ0FBQ1IsS0FBRDtBQUFBLFNBQWlCO0FBQ25EQSxJQUFBQSxLQUFLLEVBQUxBLEtBRG1EO0FBRW5EUCxJQUFBQSxJQUFJLEVBQUVDLG1CQUF1QmU7QUFGc0IsR0FBakI7QUFBQSxDQUE3Qjs7OztBQUtBLElBQU1DLG9CQUFvQixHQUFHLFNBQXZCQSxvQkFBdUIsQ0FBQ2xCLElBQUQ7QUFBQSxTQUEyQjtBQUM3REEsSUFBQUEsSUFBSSxFQUFKQSxJQUQ2RDtBQUU3REMsSUFBQUEsSUFBSSxFQUFFQyxtQkFBdUJpQjtBQUZnQyxHQUEzQjtBQUFBLENBQTdCOzs7O0FBTUEsSUFBTUMsMkJBQTJCLEdBQUcsU0FBOUJBLDJCQUE4QixDQUFDZixRQUFEO0FBQUEsU0FBb0I7QUFDN0RBLElBQUFBLFFBQVEsRUFBUkEsUUFENkQ7QUFFN0RKLElBQUFBLElBQUksRUFBRUMsbUJBQXVCbUI7QUFGZ0MsR0FBcEI7QUFBQSxDQUFwQzs7OztBQUtBLElBQU1DLHdCQUF3QixHQUFHLFNBQTNCQSx3QkFBMkIsQ0FBQ2QsS0FBRDtBQUFBLFNBQWlCO0FBQ3ZEQSxJQUFBQSxLQUFLLEVBQUxBLEtBRHVEO0FBRXZEUCxJQUFBQSxJQUFJLEVBQUVDLG1CQUF1QnFCO0FBRjBCLEdBQWpCO0FBQUEsQ0FBakM7Ozs7QUFLQSxJQUFNQyxpQkFBaUIsR0FBRyxTQUFwQkEsaUJBQW9CO0FBQUEsU0FBTztBQUN0Q3ZCLElBQUFBLElBQUksRUFBRUMsbUJBQXVCdUI7QUFEUyxHQUFQO0FBQUEsQ0FBMUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJUmVxdWVzdEZpbHRlciB9IGZyb20gJ3JlcXVlc3QtZmlsdGVyJztcbmltcG9ydCBFbWFpbFRlbXBsYXRlQ29uc3RhbnRzIGZyb20gJy4vY29uc3RhbnRzJztcblxuZXhwb3J0IGludGVyZmFjZSBJRW1haWxUZW1wbGF0ZSB7XG4gIF9pZD86IHN0cmluZztcbiAgbmFtZTogc3RyaW5nO1xuICBkZXNjcmlwdGlvbjogc3RyaW5nO1xuICB0eXBlOiBzdHJpbmc7XG4gIGJvZHk6IHN0cmluZztcbiAgYm9keV9qc29uOiBJR2VuZXJhdGVkVGVtcGxhdGU7XG4gIGNyZWF0ZWRBdD86IHN0cmluZztcbiAgdXBkYXRlZEF0Pzogc3RyaW5nXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSUdlbmVyYXRlZFRlbXBsYXRlIHtcbiAgY3NzOiBzdHJpbmcsXG4gIGRlc2lnbjogb2JqZWN0LFxuICBodG1sOiBzdHJpbmcsXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSVRlbXBsYXRlTGlzdCB7XG4gIGlkOiBzdHJpbmcsXG4gIG5hbWU6IHN0cmluZyxcbiAgdHlwZTogc3RyaW5nLFxuICBkZXNjcmlwdGlvbjogc3RyaW5nXG59XG5cbmV4cG9ydCBjb25zdCBjcmVhdGVPclVwZGF0ZUVtYWlsVGVtcGxhdGUgPSAoZGF0YTogSUVtYWlsVGVtcGxhdGUpID0+ICh7XG4gIGRhdGEsXG4gIHR5cGU6IEVtYWlsVGVtcGxhdGVDb25zdGFudHMuQ1JFQVRFX09SX1VQREFURV9FTUFJTF9URU1QTEFURVxufSk7XG5cblxuZXhwb3J0IGNvbnN0IGNyZWF0ZU9yVXBkYXRlRW1haWxUZW1wbGF0ZVN1Y2Nlc3MgPSAocmVzcG9uc2U6IGFueSkgPT4gKHtcbiAgcmVzcG9uc2UsXG4gIHR5cGU6IEVtYWlsVGVtcGxhdGVDb25zdGFudHMuQ1JFQVRFX09SX1VQREFURV9FTUFJTF9URU1QTEFURV9TVUNDRVNTXG59KTtcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZU9yVXBkYXRlRW1haWxUZW1wbGF0ZUZhaWwgPSAoZXJyb3I6IGFueSkgPT4gKHtcbiAgZXJyb3IsXG4gIHR5cGU6IEVtYWlsVGVtcGxhdGVDb25zdGFudHMuQ1JFQVRFX09SX1VQREFURV9FTUFJTF9URU1QTEFURV9GQUlMXG59KTtcblxuXG5leHBvcnQgY29uc3QgZ2V0RW1haWxUZW1wbGF0ZSA9IChpZDogc3RyaW5nLCBjYWxsYmFjaz86IChyZXNwb25zZTogSUVtYWlsVGVtcGxhdGUpID0+IHZvaWQpID0+ICh7XG4gIGNhbGxiYWNrLFxuICBpZCxcbiAgdHlwZTogRW1haWxUZW1wbGF0ZUNvbnN0YW50cy5HRVRfRU1BSUxfVEVNUExBVEVcbn0pO1xuXG5cbmV4cG9ydCBjb25zdCBnZXRFbWFpbFRlbXBsYXRlU3VjY2VzcyA9IChyZXNwb25zZTogYW55KSA9PiAoe1xuICByZXNwb25zZSxcbiAgdHlwZTogRW1haWxUZW1wbGF0ZUNvbnN0YW50cy5HRVRfRU1BSUxfVEVNUExBVEVfU1VDQ0VTU1xufSk7XG5cbmV4cG9ydCBjb25zdCBnZXRFbWFpbFRlbXBsYXRlRmFpbCA9IChlcnJvcjogYW55KSA9PiAoe1xuICBlcnJvcixcbiAgdHlwZTogRW1haWxUZW1wbGF0ZUNvbnN0YW50cy5HRVRfRU1BSUxfVEVNUExBVEVfRkFJTFxufSk7XG5cbmV4cG9ydCBjb25zdCBnZXRBbGxFbWFpbFRlbXBsYXRlcyA9IChkYXRhOiBJUmVxdWVzdEZpbHRlcikgPT4gKHtcbiAgZGF0YSxcbiAgdHlwZTogRW1haWxUZW1wbGF0ZUNvbnN0YW50cy5HRVRfQUxMX0VNQUlMX1RFTVBMQVRFU1xufSk7XG5cblxuZXhwb3J0IGNvbnN0IGdldEFsbEVtYWlsVGVtcGxhdGVzU3VjY2VzcyA9IChyZXNwb25zZTogYW55KSA9PiAoe1xuICByZXNwb25zZSxcbiAgdHlwZTogRW1haWxUZW1wbGF0ZUNvbnN0YW50cy5HRVRfQUxMX0VNQUlMX1RFTVBMQVRFU19TVUNDRVNTXG59KTtcblxuZXhwb3J0IGNvbnN0IGdldEFsbEVtYWlsVGVtcGxhdGVzRmFpbCA9IChlcnJvcjogYW55KSA9PiAoe1xuICBlcnJvcixcbiAgdHlwZTogRW1haWxUZW1wbGF0ZUNvbnN0YW50cy5HRVRfQUxMX0VNQUlMX1RFTVBMQVRFU19GQUlMXG59KTtcblxuZXhwb3J0IGNvbnN0IHJlc2V0SW5pdGlhbFN0YXRlID0gKCkgPT4gKHtcbiAgdHlwZTogRW1haWxUZW1wbGF0ZUNvbnN0YW50cy5SRVNFVF9JTklUSUFMX1NUQVRFXG59KTtcblxuIl19