"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getTableDataError = exports.getTableDataSuccess = exports.getTableData = exports.getTableMetaError = exports.getTableMetaSuccess = exports.getTableMeta = void 0;

var _constants = _interopRequireDefault(require("./constants"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getTableMeta = function getTableMeta(callback) {
  return {
    callback: callback,
    type: _constants.default.GET_TABLE_META
  };
};

exports.getTableMeta = getTableMeta;

var getTableMetaSuccess = function getTableMetaSuccess(response) {
  return {
    response: response,
    type: _constants.default.GET_TABLE_META_SUCCESS
  };
};

exports.getTableMetaSuccess = getTableMetaSuccess;

var getTableMetaError = function getTableMetaError(error) {
  return {
    error: error,
    type: _constants.default.GET_TABLE_META_ERROR
  };
};

exports.getTableMetaError = getTableMetaError;

var getTableData = function getTableData(resource, limit, currentPage, filters, sortField, sortOrder) {
  var retainData = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;
  var callback = arguments.length > 7 ? arguments[7] : undefined;
  return {
    callback: callback,
    currentPage: currentPage,
    filters: filters,
    limit: limit,
    resource: resource,
    retainData: retainData,
    sortField: sortField,
    sortOrder: sortOrder,
    type: _constants.default.GET_TABLE_DATA
  };
};

exports.getTableData = getTableData;

var getTableDataSuccess = function getTableDataSuccess(response) {
  var retainData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  return {
    response: response,
    retainData: retainData,
    type: _constants.default.GET_TABLE_DATA_SUCCESS
  };
};

exports.getTableDataSuccess = getTableDataSuccess;

var getTableDataError = function getTableDataError(error) {
  return {
    error: error,
    type: _constants.default.GET_TABLE_DATA_ERROR
  };
};

exports.getTableDataError = getTableDataError;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hY3Rpb25zL2R5bmFtaWNUYWJsZS9pbmRleC50cyJdLCJuYW1lcyI6WyJnZXRUYWJsZU1ldGEiLCJjYWxsYmFjayIsInR5cGUiLCJhY3Rpb25zIiwiR0VUX1RBQkxFX01FVEEiLCJnZXRUYWJsZU1ldGFTdWNjZXNzIiwicmVzcG9uc2UiLCJHRVRfVEFCTEVfTUVUQV9TVUNDRVNTIiwiZ2V0VGFibGVNZXRhRXJyb3IiLCJlcnJvciIsIkdFVF9UQUJMRV9NRVRBX0VSUk9SIiwiZ2V0VGFibGVEYXRhIiwicmVzb3VyY2UiLCJsaW1pdCIsImN1cnJlbnRQYWdlIiwiZmlsdGVycyIsInNvcnRGaWVsZCIsInNvcnRPcmRlciIsInJldGFpbkRhdGEiLCJHRVRfVEFCTEVfREFUQSIsImdldFRhYmxlRGF0YVN1Y2Nlc3MiLCJHRVRfVEFCTEVfREFUQV9TVUNDRVNTIiwiZ2V0VGFibGVEYXRhRXJyb3IiLCJHRVRfVEFCTEVfREFUQV9FUlJPUiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBR08sSUFBTUEsWUFBWSxHQUFHLFNBQWZBLFlBQWUsQ0FBQ0MsUUFBRDtBQUFBLFNBQW9CO0FBQzlDQSxJQUFBQSxRQUFRLEVBQVJBLFFBRDhDO0FBRTlDQyxJQUFBQSxJQUFJLEVBQUVDLG1CQUFRQztBQUZnQyxHQUFwQjtBQUFBLENBQXJCOzs7O0FBS0EsSUFBTUMsbUJBQW1CLEdBQUcsU0FBdEJBLG1CQUFzQixDQUFDQyxRQUFEO0FBQUEsU0FBdUI7QUFDeERBLElBQUFBLFFBQVEsRUFBUkEsUUFEd0Q7QUFFeERKLElBQUFBLElBQUksRUFBRUMsbUJBQVFJO0FBRjBDLEdBQXZCO0FBQUEsQ0FBNUI7Ozs7QUFLQSxJQUFNQyxpQkFBaUIsR0FBRyxTQUFwQkEsaUJBQW9CLENBQUNDLEtBQUQ7QUFBQSxTQUFvQjtBQUNuREEsSUFBQUEsS0FBSyxFQUFMQSxLQURtRDtBQUVuRFAsSUFBQUEsSUFBSSxFQUFFQyxtQkFBUU87QUFGcUMsR0FBcEI7QUFBQSxDQUExQjs7OztBQUtBLElBQU1DLFlBQVksR0FBRyxTQUFmQSxZQUFlLENBQUNDLFFBQUQsRUFBbUJDLEtBQW5CLEVBQWtDQyxXQUFsQyxFQUF1REMsT0FBdkQsRUFBd0VDLFNBQXhFLEVBQTJGQyxTQUEzRjtBQUFBLE1BQThHQyxVQUE5Ryx1RUFBb0ksS0FBcEk7QUFBQSxNQUEySWpCLFFBQTNJO0FBQUEsU0FBK0o7QUFDekxBLElBQUFBLFFBQVEsRUFBUkEsUUFEeUw7QUFFekxhLElBQUFBLFdBQVcsRUFBWEEsV0FGeUw7QUFHekxDLElBQUFBLE9BQU8sRUFBUEEsT0FIeUw7QUFJekxGLElBQUFBLEtBQUssRUFBTEEsS0FKeUw7QUFLekxELElBQUFBLFFBQVEsRUFBUkEsUUFMeUw7QUFNekxNLElBQUFBLFVBQVUsRUFBVkEsVUFOeUw7QUFPekxGLElBQUFBLFNBQVMsRUFBVEEsU0FQeUw7QUFRekxDLElBQUFBLFNBQVMsRUFBVEEsU0FSeUw7QUFTekxmLElBQUFBLElBQUksRUFBRUMsbUJBQVFnQjtBQVQySyxHQUEvSjtBQUFBLENBQXJCOzs7O0FBWUEsSUFBTUMsbUJBQW1CLEdBQUcsU0FBdEJBLG1CQUFzQixDQUFDZCxRQUFEO0FBQUEsTUFBdUJZLFVBQXZCLHVFQUE2QyxLQUE3QztBQUFBLFNBQXdEO0FBQ3pGWixJQUFBQSxRQUFRLEVBQVJBLFFBRHlGO0FBRXpGWSxJQUFBQSxVQUFVLEVBQVZBLFVBRnlGO0FBR3pGaEIsSUFBQUEsSUFBSSxFQUFFQyxtQkFBUWtCO0FBSDJFLEdBQXhEO0FBQUEsQ0FBNUI7Ozs7QUFNQSxJQUFNQyxpQkFBaUIsR0FBRyxTQUFwQkEsaUJBQW9CLENBQUNiLEtBQUQ7QUFBQSxTQUFvQjtBQUNuREEsSUFBQUEsS0FBSyxFQUFMQSxLQURtRDtBQUVuRFAsSUFBQUEsSUFBSSxFQUFFQyxtQkFBUW9CO0FBRnFDLEdBQXBCO0FBQUEsQ0FBMUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYWN0aW9ucyBmcm9tICcuL2NvbnN0YW50cyc7XG5pbXBvcnQgeyBJRGF0YVN0YXRlIH0gZnJvbSAnLi4vLi4vcmVkdWNlcnMvZHluYW1pY1RhYmxlJztcblxuZXhwb3J0IGNvbnN0IGdldFRhYmxlTWV0YSA9IChjYWxsYmFjazogYW55KSA9PiAoe1xuICBjYWxsYmFjayxcbiAgdHlwZTogYWN0aW9ucy5HRVRfVEFCTEVfTUVUQVxufSk7XG5cbmV4cG9ydCBjb25zdCBnZXRUYWJsZU1ldGFTdWNjZXNzID0gKHJlc3BvbnNlOiBvYmplY3QpID0+ICh7XG4gIHJlc3BvbnNlLFxuICB0eXBlOiBhY3Rpb25zLkdFVF9UQUJMRV9NRVRBX1NVQ0NFU1Ncbn0pO1xuXG5leHBvcnQgY29uc3QgZ2V0VGFibGVNZXRhRXJyb3IgPSAoZXJyb3I6IG9iamVjdCkgPT4gKHtcbiAgZXJyb3IsXG4gIHR5cGU6IGFjdGlvbnMuR0VUX1RBQkxFX01FVEFfRVJST1Jcbn0pO1xuXG5leHBvcnQgY29uc3QgZ2V0VGFibGVEYXRhID0gKHJlc291cmNlOiBzdHJpbmcsIGxpbWl0OiBudW1iZXIsIGN1cnJlbnRQYWdlOiBudW1iZXIsIGZpbHRlcnM6IHN0cmluZywgc29ydEZpZWxkOiBzdHJpbmcsIHNvcnRPcmRlcjogbnVtYmVyLCByZXRhaW5EYXRhOiBib29sZWFuID0gZmFsc2UsIGNhbGxiYWNrPzogYW55KSA9PiAoe1xuICBjYWxsYmFjayxcbiAgY3VycmVudFBhZ2UsXG4gIGZpbHRlcnMsXG4gIGxpbWl0LFxuICByZXNvdXJjZSxcbiAgcmV0YWluRGF0YSxcbiAgc29ydEZpZWxkLFxuICBzb3J0T3JkZXIsXG4gIHR5cGU6IGFjdGlvbnMuR0VUX1RBQkxFX0RBVEFcbn0pO1xuXG5leHBvcnQgY29uc3QgZ2V0VGFibGVEYXRhU3VjY2VzcyA9IChyZXNwb25zZTogSURhdGFTdGF0ZSwgcmV0YWluRGF0YTogYm9vbGVhbiA9IGZhbHNlKSA9PiAoe1xuICByZXNwb25zZSxcbiAgcmV0YWluRGF0YSxcbiAgdHlwZTogYWN0aW9ucy5HRVRfVEFCTEVfREFUQV9TVUNDRVNTXG59KTtcblxuZXhwb3J0IGNvbnN0IGdldFRhYmxlRGF0YUVycm9yID0gKGVycm9yOiBvYmplY3QpID0+ICh7XG4gIGVycm9yLFxuICB0eXBlOiBhY3Rpb25zLkdFVF9UQUJMRV9EQVRBX0VSUk9SXG59KTtcbiJdfQ==